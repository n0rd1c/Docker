# Lidarr - Music Management
# Set url_base in lidarr settings if using PathPrefix
#  lidarr:
#    image: linuxserver/lidarr:latest
#    container_name: lidarr
#    restart: unless-stopped
#    networks:
#      - t2_proxy
#    security_opt:
#      - no-new-privileges:true
#    ports:
#      - "$LIDARR_PORT:8686"
#    volumes:
#      - $USERDIR/docker/lidarr:/config
#      - /unraid/seeders:/downloads
#      - /unraid/music:/music
#      - "/etc/localtime:/etc/localtime:ro"
#    environment:
#      PUID: $PUID
#      PGID: $PGID
#      TZ: $TZ
#    labels:
#      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
#      - "traefik.http.routers.lidarr-rtr-bypass.entrypoints=https"
#      - "traefik.http.routers.lidarr-rtr-bypass.rule=Headers(`X-Api-Key`, `$LIDARR_API_KEY`) || Query(`apikey`, `$LIDARR_API_KEY`)"
#      - "traefik.http.routers.lidarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
#      - "traefik.http.routers.lidarr-rtr.entrypoints=https"
#      - "traefik.http.routers.lidarr-rtr.rule=Host(`lidarr.$DOMAINNAME`)"
#      - "traefik.http.routers.lidarr-rtr.priority=99"
#      - "traefik.http.routers.lidarr-rtr.tls=true"
      ## Middlewares
#      - "traefik.http.routers.lidarr-rtr-bypass.middlewares=chain-basic-auth@file"
      ## HTTP Services
#      - "traefik.http.routers.lidarr-rtr.service=lidarr-svc"
#      - "traefik.http.routers.lidarr-rtr-bypass.service=lidarr-svc"
#      - "traefik.http.services.lidarr-svc.loadbalancer.server.port=8686"
